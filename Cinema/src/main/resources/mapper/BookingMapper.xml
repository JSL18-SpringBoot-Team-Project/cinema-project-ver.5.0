<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.movie.mapper.BookingMapper">
    <!-- 예매 등록 -->
    <insert id="insertBookingWithCoupon" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO bookings (user_id, schedule_id, coupon_id, price)
        VALUES (#{userId}, #{scheduleId}, #{couponId}, #{price})
    </insert>

    <!-- 예매 등록 -->
    <insert id="insertBooking" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO bookings (user_id, schedule_id, price)
        VALUES (#{userId}, #{scheduleId}, #{price})
    </insert>

    <!-- 예매 내역 조회 -->
    <select id="getBookingsByUserId" resultType="map">
        SELECT
        b.timestamp AS bookingDate,
        m.title AS movieName,
        CONCAT(s.watch_date, ' ', s.start_time) AS screeningDateTime,
        GROUP_CONCAT(seat.seat_row, seat.seat_column) AS seatNumber,
        b.price AS bookingPrice
        FROM bookings b
        JOIN schedules s ON b.schedule_id = s.id
        JOIN movies m ON s.movie_id = m.id
        JOIN tickets t ON b.id = t.booking_id
        JOIN seats seat ON t.seat_id = seat.id
        WHERE b.user_id = #{userId}
        GROUP BY b.id;
        <if test="type != null and type != 'all'">
            AND <choose>
            <when test="type == 'current'">s.watch_date &gt;= CURRENT_DATE</when>
            <when test="type == 'past'">s.watch_date &lt; CURRENT_DATE</when>
        </choose>
        </if>
        <if test="startDate != null and endDate != null">
            AND DATE(b.timestamp) BETWEEN #{startDate} AND #{endDate}
        </if>
    </select>

    <!-- 예매 취소 내역 조회 -->
    <select id="getCancellationList" resultType="map">
        SELECT
        b.cancel_date AS cancelDate,                  -- 취소 날짜
        m.title AS movieName,                         -- 영화 제목
        CONCAT(s.watch_date, ' ', s.start_time) AS screeningDateTime, -- 상영일시
        b.price AS canceledPrice                      -- 취소 금액
        FROM bookings b
        JOIN schedules s ON b.schedule_id = s.id
        JOIN movies m ON s.movie_id = m.id
        WHERE b.user_id = #{userId}
        AND b.status = 'CANCELED';
    </select>


    <!-- 사용 가능한 날짜 조회 -->
    <select id="getAvailableDates" resultType="String">
        SELECT DISTINCT DATE(timestamp) AS date
        FROM bookings
        WHERE user_id = #{userId}
        ORDER BY date DESC
    </select>

    <select id="getTodaySale" resultType="long">
        SELECT IFNULL(SUM(price), 0) as sum
        FROM bookings
        WHERE cancel_timestamp IS NULL AND DATE(booking_timestamp) = CURDATE()
    </select>

    <select id="getTotalSale" resultType="long">
        SELECT SUM(price) as sum
        FROM bookings
        WHERE cancel_timestamp IS NULL
    </select>
</mapper>